{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "register_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDefault"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user and return JWT token",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user info",
        "operationId": "get_me_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a list of all users.",
        "operationId": "get_users_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "title": "Response Get Users Users  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the User by id.",
        "operationId": "get_user_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update the User Info by id.",
        "operationId": "update_user_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete the User by id.",
        "operationId": "delete_user_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/categories/": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new Category.",
        "operationId": "create_category_categories__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List the Category.",
        "operationId": "list_category_categories__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by User ID",
              "title": "User Id"
            },
            "description": "Filter by User ID"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Category Name",
              "title": "Name"
            },
            "description": "Filter by Category Name"
          },
          {
            "name": "cat_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/CategoryType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Category Type",
              "title": "Cat Type"
            },
            "description": "Filter by Category Type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "title": "Response List Category Categories  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{category_id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get the Category by id.",
        "operationId": "get_category_categories__category_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update the Category by id.",
        "operationId": "update_category_categories__category_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete the Category by id.",
        "operationId": "delete_user_categories__category_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Category Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tags/": {
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create a new Tag.",
        "operationId": "create_tag_tags__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "List Tags.",
        "operationId": "list_tags_tags__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by User ID",
              "title": "User Id"
            },
            "description": "Filter by User ID"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Tag Name",
              "title": "Name"
            },
            "description": "Filter by Tag Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  },
                  "title": "Response List Tags Tags  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/tags/{tag_id}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get the Tag by id.",
        "operationId": "get_tag_tags__tag_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tags"
        ],
        "summary": "Update the Tag by id.",
        "operationId": "update_tag_tags__tag_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete the Tag by id.",
        "operationId": "delete_tag_tags__tag_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new Transaction.",
        "operationId": "create_transaction_transactions__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionWithTags"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "List Transactions.",
        "operationId": "list_transactions_transactions__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category Id"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  },
                  "title": "Response List Transactions Transactions  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get Transaction by ID",
        "operationId": "get_transaction_transactions__transaction_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update Transaction",
        "operationId": "update_transaction_transactions__transaction_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete Transaction",
        "operationId": "delete_transaction_transactions__transaction_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}/with-category": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a specific transaction with Category details.",
        "operationId": "get_transaction_with_category_transactions__transaction_id__with_category_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionWithCategory"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{transaction_id}/with-tags": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get a specific transaction with Tags details.",
        "operationId": "get_transaction_with_tags_transactions__transaction_id__with_tags_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Transaction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionWithTags"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/": {
      "post": {
        "tags": [
          "Budgets"
        ],
        "summary": "Create a new Budget.",
        "operationId": "create_budget_budgets__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get a list of all budgets.",
        "operationId": "list_budgets_budgets__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by User ID",
              "title": "User Id"
            },
            "description": "Filter by User ID"
          },
          {
            "name": "category_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Category ID",
              "title": "Category Id"
            },
            "description": "Filter by Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Budget"
                  },
                  "title": "Response List Budgets Budgets  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/budgets/{budget_id}": {
      "get": {
        "tags": [
          "Budgets"
        ],
        "summary": "Get the Budget by id.",
        "operationId": "get_budget_budgets__budget_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Budget Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Budgets"
        ],
        "summary": "Update the Budget by id.",
        "operationId": "update_budget_budgets__budget_id__put",
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Budget Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Budgets"
        ],
        "summary": "Delete the Budget by id.",
        "operationId": "delete_budget_budgets__budget_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Budget Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/goals/": {
      "post": {
        "tags": [
          "Goals"
        ],
        "summary": "Create a new Goal.",
        "operationId": "create_goal_goals__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoalDefault"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Goals"
        ],
        "summary": "List all Goals.",
        "operationId": "list_goals_goals__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by User ID",
              "title": "User Id"
            },
            "description": "Filter by User ID"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Goal Name",
              "title": "Name"
            },
            "description": "Filter by Goal Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Goal"
                  },
                  "title": "Response List Goals Goals  Get"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/goals/{goal_id}": {
      "get": {
        "tags": [
          "Goals"
        ],
        "summary": "Get the Goal by id.",
        "operationId": "get_goal_goals__goal_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Goals"
        ],
        "summary": "Update the Goal by id.",
        "operationId": "update_goal_goals__goal_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoalUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Goals"
        ],
        "summary": "Delete the Goal by id.",
        "operationId": "delete_goal_goals__goal_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Goal Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully deleted",
            "content": {
              "application/json": {
                "schema": {},
                "example": {
                  "message": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "loc": [
                      "body",
                      "string"
                    ],
                    "msg": "string",
                    "type": "Type[]"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          }
        }
      }
    },
    "/parser/parse": {
      "post": {
        "tags": [
          "Parser"
        ],
        "summary": "Launch Async parsing of posts",
        "operationId": "start_parsing_parser_parse_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/parser/task/{task_id}": {
      "get": {
        "tags": [
          "Parser"
        ],
        "summary": "Get parsing status",
        "operationId": "get_task_status_parser_task__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "404": {
            "description": "Entity not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Metrics",
        "description": "Endpoint that serves Prometheus metrics.",
        "operationId": "metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Budget": {
        "properties": {
          "limit_amount": {
            "type": "string",
            "title": "Limit Amount"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "limit_amount",
          "start_date",
          "end_date",
          "user_id",
          "category_id",
          "created_at"
        ],
        "title": "Budget"
      },
      "BudgetDefault": {
        "properties": {
          "limit_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Limit Amount"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          }
        },
        "type": "object",
        "required": [
          "limit_amount",
          "start_date",
          "end_date",
          "user_id",
          "category_id"
        ],
        "title": "BudgetDefault"
      },
      "BudgetUpdate": {
        "properties": {
          "limit_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Amount"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "title": "BudgetUpdate"
      },
      "Category": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "user_id"
        ],
        "title": "Category"
      },
      "CategoryDefault": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "user_id"
        ],
        "title": "CategoryDefault"
      },
      "CategoryType": {
        "type": "string",
        "enum": [
          "income",
          "expense"
        ],
        "title": "CategoryType"
      },
      "CategoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CategoryUpdate"
      },
      "DetailedPost": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "link"
        ],
        "title": "DetailedPost"
      },
      "Goal": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "title": "Deadline"
          },
          "target_amount": {
            "type": "string",
            "title": "Target Amount"
          },
          "current_amount": {
            "type": "string",
            "title": "Current Amount"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "deadline",
          "target_amount",
          "current_amount",
          "user_id",
          "created_at"
        ],
        "title": "Goal"
      },
      "GoalDefault": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "title": "Deadline"
          },
          "target_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Target Amount"
          },
          "current_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Current Amount"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "deadline",
          "target_amount",
          "current_amount",
          "user_id"
        ],
        "title": "GoalDefault"
      },
      "GoalUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline"
          },
          "target_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Amount"
          },
          "current_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Amount"
          }
        },
        "type": "object",
        "title": "GoalUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Meta": {
        "properties": {
          "parsed": {
            "type": "integer",
            "title": "Parsed"
          },
          "duration_seconds": {
            "type": "number",
            "title": "Duration Seconds"
          }
        },
        "type": "object",
        "required": [
          "parsed",
          "duration_seconds"
        ],
        "title": "Meta"
      },
      "ParseRequest": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "ParseRequest"
      },
      "ParseResult": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/DetailedPost"
            },
            "type": "array",
            "title": "Posts"
          }
        },
        "type": "object",
        "required": [
          "meta",
          "posts"
        ],
        "title": "ParseResult"
      },
      "Tag": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id"
        ],
        "title": "Tag"
      },
      "TagDefault": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id"
        ],
        "title": "TagDefault"
      },
      "TagUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "TagUpdate"
      },
      "TaskStatusResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParseResult"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "status"
        ],
        "title": "TaskStatusResponse"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "Transaction": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "category_id",
          "amount",
          "date"
        ],
        "title": "Transaction"
      },
      "TransactionCreate": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Amount"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "tag_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "category_id",
          "amount",
          "date"
        ],
        "title": "TransactionCreate"
      },
      "TransactionUpdate": {
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "date",
          "description"
        ],
        "title": "TransactionUpdate"
      },
      "TransactionWithCategory": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "category_id",
          "amount",
          "date",
          "category"
        ],
        "title": "TransactionWithCategory"
      },
      "TransactionWithTags": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "amount": {
            "type": "string",
            "title": "Amount"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "category_id",
          "amount",
          "date",
          "tags"
        ],
        "title": "TransactionWithTags"
      },
      "User": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Date"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "birth_date",
          "created_at"
        ],
        "title": "User"
      },
      "UserDefault": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "birth_date": {
            "type": "string",
            "format": "date-time",
            "title": "Birth Date"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "birth_date"
        ],
        "title": "UserDefault"
      },
      "UserLogin": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserLogin"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "birth_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birth Date"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
